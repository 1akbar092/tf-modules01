import boto3
import os
import sys
import uuid
from PIL import Image

s3_client = boto3.client('s3')

def resize_image(image_path, resized_path):
    with Image.open(image_path) as image:
        image.thumbnail(tuple(x / 2 for x in image.size))
        image.save(resized_path)

def lambda_handler(event, context):
    for record in event['Records']:
        # Get the S3 bucket name and file key from the event
        bucket = record['s3']['bucket']['name']
        key = record['s3']['object']['key']
        
        # Generate a unique filename for the thumbnail
        thumbnail_key = 'thumbnails/' + str(uuid.uuid4()) + '.jpg'
        
        # Set the input and output file paths
        download_path = '/tmp/{}{}'.format(uuid.uuid4(), key)
        upload_path = '/tmp/{}'.format(thumbnail_key)
        
        # Download the image file from S3
        s3_client.download_file(bucket, key, download_path)
        
        # Resize the image file and save as a thumbnail
        resize_image(download_path, upload_path)
        
        # Upload the thumbnail to S3
        s3_client.upload_file(upload_path, bucket, thumbnail_key)
        
    return 'Thumbnail created successfully'
